#Блок опций
<options>
{
	# Метод поиска конфликтных правил:
	#	Intersect - Поиск правил у которых срабатывают одинаковые признаки
	#	Sequence - Поиск правил у которых сработавшие признаки не образуют пустого множества при пересечении
	"TypeDetectConflict": "Sequence",
	#Определение порядка чтения правил из файла
	#Default - как в файле 
	#Reverse - обратный порядок правил
	"TypeDirection": "Default",
	#Стартовое значение поля для ввода признаков
	"SignsDefault": "Д, В, А, Г",
	#Выполнять ли экспортную систему при открытии файла
	"StartSearch": true,
	#Данные подсказки при очищенной консоли
	"HelpConsoleData":
	[
		{
			"Type": "Decorate",
			"Value":
			[
				{ "Type": "Title", "Value": "Пример конфликтных правил" },
				{
					"Type": "Decorate",
					"Value":
					[
						{ "Type": "Text", "Value": "Входные данные и предпологаемые результаты:" },
						{ "Type": "Text", "Value": "Д, В -> сработает (Д или Г) и (В или А)" },
						{ "Type": "Text", "Value": "Д, В, А -> сработает В и А и (Д или Г)" },
						{ "Type": "Text", "Value": "Д, В, А, Г -> сработает Д и Г и А и В" }
					]
				}
			]
		}
	]
}
</options>

#Правила продукционной базы
[(Д или Г) и (В или А)]->[❌ Ошибка работы программы];
[В и А и (Д или Г)]->[❌ Ошибка работы программы];
[Д и Г и А и В]->[✅ Всё верно отработало];